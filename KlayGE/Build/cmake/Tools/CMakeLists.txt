# Required variables:
# - SOURCE_FILES/HEADER_FILES/RESOURCE_FILES
# - EFFECT_FILES/POST_PROCESSORS/UI_FILES
# - EXTRA_INCLUDE_DIRS: dependencies required besides KlayGE_Core and boost
# - EXTRA_LINKED_LIBRARIES: dependencies required besides KlayGE_Core and boost
#
MACRO(SETUP_TOOL EXE_NAME)
	SET(RESOURCE_FILES
		${KLAYGE_PROJECT_DIR}/Tools/media/Common/KlayGETool.rc
		${KLAYGE_PROJECT_DIR}/klayge_logo.ico
	)

	SOURCE_GROUP("Source Files" FILES ${SOURCE_FILES})
	SOURCE_GROUP("Header Files" FILES ${HEADER_FILES})
	SOURCE_GROUP("Resource Files" FILES ${RESOURCE_FILES})
	SOURCE_GROUP("Effect Files" FILES ${EFFECT_FILES})
	SOURCE_GROUP("Post Processors" FILES ${POST_PROCESSORS})
	SOURCE_GROUP("UI Files" FILES ${UI_FILES})

	INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/include)
	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/Core/Include)
	INCLUDE_DIRECTORIES(${EXTRA_INCLUDE_DIRS})
	LINK_DIRECTORIES(${Boost_LIBRARY_DIR})
	LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/lib/${KLAYGE_PLATFORM_NAME})
	IF(KLAYGE_PLATFORM_DARWIN OR KLAYGE_PLATFORM_LINUX)
		LINK_DIRECTORIES(${KLAYGE_BIN_DIR})
	ELSE()
		LINK_DIRECTORIES(${KLAYGE_OUTPUT_DIR})
	ENDIF()
	LINK_DIRECTORIES(${EXTRA_LINKED_DIRS})

	ADD_EXECUTABLE(${EXE_NAME} ${SOURCE_FILES} ${HEADER_FILES} ${RESOURCE_FILES} ${EFFECT_FILES} ${POST_PROCESSORS} ${UI_FILES})

	SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES
		PROJECT_LABEL ${EXE_NAME}
		DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX}
		OUTPUT_NAME ${EXE_NAME}
	)
	IF(KLAYGE_PLATFORM_DARWIN)
		SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES
			RUNTIME_OUTPUT_DIRECTORY ${KLAYGE_BIN_DIR}
			RUNTIME_OUTPUT_DIRECTORY_DEBUG ${KLAYGE_BIN_DIR}
			RUNTIME_OUTPUT_DIRECTORY_RELEASE ${KLAYGE_BIN_DIR}
			RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${KLAYGE_BIN_DIR}
			RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${KLAYGE_BIN_DIR}
		)
	ENDIF()

	IF(MSVC)
		SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES})
	ELSE()
		SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES}
			debug KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}
			debug KFL${KLAYGE_OUTPUT_SUFFIX}_d optimized KFL${KLAYGE_OUTPUT_SUFFIX}
			${Boost_SYSTEM_LIBRARY} ${Boost_REGEX_LIBRARY})
		IF(KLAYGE_PLATFORM_LINUX)
			SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES} dl pthread)
		ENDIF()
	ENDIF()
	ADD_DEPENDENCIES(${EXE_NAME} ${KLAYGE_CORELIB_NAME})

	TARGET_LINK_LIBRARIES(${EXE_NAME} ${EXTRA_LINKED_LIBRARIES})


	ADD_POST_BUILD(${EXE_NAME} "")

	INSTALL(TARGETS ${EXE_NAME}
		RUNTIME DESTINATION ${KLAYGE_BIN_DIR}
		LIBRARY DESTINATION ${KLAYGE_BIN_DIR}
		ARCHIVE DESTINATION ${KLAYGE_OUTPUT_DIR}
	)

	CREATE_PROJECT_USERFILE(KlayGE ${EXE_NAME})

	SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES FOLDER "Tools")
ENDMACRO(SETUP_TOOL)

ADD_SUBDIRECTORY(Bump2Normal)
ADD_SUBDIRECTORY(ColorGradingTexGen)
ADD_SUBDIRECTORY(D3DCompilerWrapper)
ADD_SUBDIRECTORY(DistanceMapCreator)
ADD_SUBDIRECTORY(FFTLensEffectsGen)
ADD_SUBDIRECTORY(ForceTexSRGB)
ADD_SUBDIRECTORY(FXML2Shader)
ADD_SUBDIRECTORY(FXMLJIT)
ADD_SUBDIRECTORY(GLCompatibility)
ADD_SUBDIRECTORY(GLESCompatibility)
ADD_SUBDIRECTORY(HDRCompressor)
ADD_SUBDIRECTORY(HWCollect)
ADD_SUBDIRECTORY(JudaTexPacker)
ADD_SUBDIRECTORY(KFontGen)
ADD_SUBDIRECTORY(MeshConv)
ADD_SUBDIRECTORY(MeshMLJIT)
ADD_SUBDIRECTORY(Mipmapper)
ADD_SUBDIRECTORY(NoiseTexGen)
ADD_SUBDIRECTORY(NormalMapCompressor)
ADD_SUBDIRECTORY(Normal2NaLength)
ADD_SUBDIRECTORY(Normal2Height)
ADD_SUBDIRECTORY(NormalMapGen)
ADD_SUBDIRECTORY(PlatformDeployer)
ADD_SUBDIRECTORY(PrefilterCube)
ADD_SUBDIRECTORY(Tex2JTML)
ADD_SUBDIRECTORY(TexCompressor)
IF(KLAYGE_COMPILER_MSVC AND (KLAYGE_ARCH_NAME MATCHES "x64"))
	ADD_SUBDIRECTORY(MeshMLViewer)
	ADD_SUBDIRECTORY(MtlEditor)
ENDIF()
