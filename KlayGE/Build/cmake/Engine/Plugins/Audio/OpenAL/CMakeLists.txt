IF(WIN32)
	IF(KLAYGE_ARCH_NAME MATCHES "x64")
		SET(OAL_PLATFORM_NAME "Win64")
	ELSE()
		SET(OAL_PLATFORM_NAME "Win32")
	ENDIF()
ENDIF()
IF(UNIX)
	IF(KLAYGE_ARCH_NAME MATCHES "x64")
		SET(OAL_PLATFORM_NAME "linux_x64")
	ELSE()
		SET(OAL_PLATFORM_NAME "linux_x86")
	ENDIF()
ENDIF()


SET(LIB_NAME KlayGE_AudioEngine_OpenAL)

SET(OPENAL_AE_SOURCE_FILES
	${KLAYGE_PROJECT_DIR}/Plugins/Src/Audio/OpenAL/OALAudioEngine.cpp
	${KLAYGE_PROJECT_DIR}/Plugins/Src/Audio/OpenAL/OALAudioFactory.cpp
	${KLAYGE_PROJECT_DIR}/Plugins/Src/Audio/OpenAL/OALMusicBuffer.cpp
	${KLAYGE_PROJECT_DIR}/Plugins/Src/Audio/OpenAL/OALSoundBuffer.cpp
)

SET(OPENAL_AE_HEADER_FILES
	${KLAYGE_PROJECT_DIR}/Plugins/Include/KlayGE/OpenAL/OALAudio.hpp
	${KLAYGE_PROJECT_DIR}/Plugins/Include/KlayGE/OpenAL/OALAudioFactory.hpp
)

SOURCE_GROUP("Source Files" FILES ${OPENAL_AE_SOURCE_FILES})
SOURCE_GROUP("Header Files" FILES ${OPENAL_AE_HEADER_FILES})

ADD_DEFINITIONS(-DKLAYGE_BUILD_DLL -DKLAYGE_OAL_AE_SOURCE)

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../External/OpenALSDK/include)
INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/include)
INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/Core/Include)
INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/Plugins/Include)
LINK_DIRECTORIES(${Boost_LIBRARY_DIR})
LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../External/OpenALSDK/libs/${OAL_PLATFORM_NAME})
LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/lib/${KLAYGE_PLATFORM_NAME})
IF(KLAYGE_PLATFORM_DARWIN OR KLAYGE_PLATFORM_LINUX)
	LINK_DIRECTORIES(${KLAYGE_BIN_DIR})
ELSE()
	LINK_DIRECTORIES(${KLAYGE_OUTPUT_DIR})
ENDIF()

ADD_LIBRARY(${LIB_NAME} SHARED
	${OPENAL_AE_SOURCE_FILES} ${OPENAL_AE_HEADER_FILES}
)
ADD_DEPENDENCIES(${LIB_NAME} ${KLAYGE_CORELIB_NAME})

IF(MSVC)
	SET(EXTRA_LINKED_LIBRARIES "")
ELSE()
	IF(KLAYGE_PLATFORM_WINDOWS_DESKTOP)
		SET(EXTRA_LINKED_LIBRARIES OpenAL32)
	ELSEIF(KLAYGE_PLATFORM_DARWIN OR KLAYGE_PLATFORM_IOS)
		FIND_LIBRARY(OPENAL OpenAL "/")
		SET(EXTRA_LINKED_LIBRARIES ${OPENAL})
	ELSE()
		SET(EXTRA_LINKED_LIBRARIES openal)
	ENDIF()

	SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES}
		debug KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}
		debug KFL${KLAYGE_OUTPUT_SUFFIX}_d optimized KFL${KLAYGE_OUTPUT_SUFFIX}
		${Boost_SYSTEM_LIBRARY})
ENDIF()

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY ${KLAYGE_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${KLAYGE_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${KLAYGE_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${KLAYGE_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL ${KLAYGE_OUTPUT_DIR}
	PROJECT_LABEL ${LIB_NAME}
	DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX}
	OUTPUT_NAME ${LIB_NAME}${KLAYGE_OUTPUT_SUFFIX}
)

ADD_PRECOMPILED_HEADER(${LIB_NAME} "KlayGE/KlayGE.hpp" "${KLAYGE_PROJECT_DIR}/Core/Include" "${KLAYGE_PROJECT_DIR}/Plugins/Src/Audio/OpenAL/OALAudioFactory.cpp")

TARGET_LINK_LIBRARIES(${LIB_NAME}
	${EXTRA_LINKED_LIBRARIES}
)


ADD_POST_BUILD(${LIB_NAME} "Audio")


INSTALL(TARGETS ${LIB_NAME}
	RUNTIME DESTINATION ${KLAYGE_BIN_DIR}/Audio
	LIBRARY DESTINATION ${KLAYGE_BIN_DIR}/Audio
	ARCHIVE DESTINATION ${KLAYGE_OUTPUT_DIR}
)

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES FOLDER "Engine/Audio System")
