# Required variables:
# - SOURCE_FILES/HEADER_FILES/RESOURCE_FILES
# - EFFECT_FILES/POST_PROCESSORS/UI_FILES
# - EXTRA_INCLUDE_DIRS: dependencies required besides KlayGE_Core and boost
# - EXTRA_LINKED_LIBRARIES: dependencies required besides KlayGE_Core and boost
#
MACRO(SETUP_TUTORIAL EXE_NAME)
	IF(KLAYGE_PLATFORM_WINDOWS_RUNTIME)
		SET(SHORT_NAME ${EXE_NAME})

		IF(PERMISSION_LOCATION)
			SET(PERMISSION_LOCATION_STR "<DeviceCapability Name=\"location\" />")
		ENDIF()
		
		IF(KLAYGE_PLATFORM_WINDOWS_STORE)
			SET(APPXMANIFEST_TYPE "WinStore")
		ELSE()
			SET(APPXMANIFEST_TYPE "WinPhone")
		ENDIF()

		CONFIGURE_FILE(
			${KLAYGE_ROOT_DIR}/cmake/${APPXMANIFEST_TYPE}/Package_${KLAYGE_COMPILER_NAME}${KLAYGE_COMPILER_VERSION}.appxmanifest.in
			${CMAKE_CURRENT_BINARY_DIR}/Package.appxmanifest
			@ONLY
		)

		SET(CONTENT_FILES ${CONTENT_FILES}
			${CMAKE_CURRENT_BINARY_DIR}/Package.appxmanifest
			${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/Logo.png
			${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/SplashScreen.png
			${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/StoreLogo.png
		)
		IF(KLAYGE_PLATFORM_WINDOWS_UWP)
			SET(CONTENT_FILES ${CONTENT_FILES}
				${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/SmallLogo44.png
			)
		ELSE()
			SET(CONTENT_FILES ${CONTENT_FILES}
				${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/SmallLogo.png
			)
		ENDIF()

		SET(DEBUG_CONTENT_FILES ${DEBUG_CONTENT_FILES}
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/7zxa${KLAYGE_OUTPUT_SUFFIX}${CMAKE_DEBUG_POSTFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/LZMA${KLAYGE_OUTPUT_SUFFIX}${CMAKE_DEBUG_POSTFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/kfont${KLAYGE_OUTPUT_SUFFIX}${CMAKE_DEBUG_POSTFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}${CMAKE_DEBUG_POSTFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/Render/KlayGE_RenderEngine_D3D11${KLAYGE_OUTPUT_SUFFIX}${CMAKE_DEBUG_POSTFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/Scene/KlayGE_Scene_OCTree${KLAYGE_OUTPUT_SUFFIX}${CMAKE_DEBUG_POSTFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/Input/KlayGE_InputEngine_MsgInput${KLAYGE_OUTPUT_SUFFIX}${CMAKE_DEBUG_POSTFIX}.dll
		)
		SET(RELEASE_CONTENT_FILES ${RELEASE_CONTENT_FILES}
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/7zxa${KLAYGE_OUTPUT_SUFFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/LZMA${KLAYGE_OUTPUT_SUFFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/kfont${KLAYGE_OUTPUT_SUFFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/Render/KlayGE_RenderEngine_D3D11${KLAYGE_OUTPUT_SUFFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/Scene/KlayGE_Scene_OCTree${KLAYGE_OUTPUT_SUFFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/Input/KlayGE_InputEngine_MsgInput${KLAYGE_OUTPUT_SUFFIX}.dll
		)

		SET(RESOURCE_FILES
			${CONTENT_FILES} ${DEBUG_CONTENT_FILES} ${RELEASE_CONTENT_FILES}
			${KLAYGE_PROJECT_DIR}/Samples/media/Common/KlayGE_TemporaryKey.pfx)

		SET_SOURCE_FILES_PROPERTIES(${CONTENT_FILES} ${POST_PROCESSORS} ${UI_FILES}
			PROPERTIES
			VS_DEPLOYMENT_CONTENT 1)
		SET_SOURCE_FILES_PROPERTIES(${DEBUG_CONTENT_FILES}
			PROPERTIES
			VS_DEPLOYMENT_CONTENT $<CONFIG:Debug>)
		SET_SOURCE_FILES_PROPERTIES(${RELEASE_CONTENT_FILES}
			PROPERTIES
			VS_DEPLOYMENT_CONTENT $<OR:$<CONFIG:Release>,$<CONFIG:RelWithDebInfo>,$<CONFIG:MinSizeRel>>)
	ELSEIF(KLAYGE_PLATFORM_ANDROID)
		IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
			SET(PROJ_NAME "${EXE_NAME}_d")
		ELSE()
			SET(PROJ_NAME "${EXE_NAME}")
		ENDIF()
		SET(SHORT_NAME ${PROJ_NAME})

		STRING(TOLOWER ${SHORT_NAME} SHORT_NAME_LOWER_CASE)
		CONFIGURE_FILE(
			${KLAYGE_ROOT_DIR}/cmake/Android/AndroidManifest.xml.in
			${CMAKE_CURRENT_BINARY_DIR}/AndroidManifest.xml
			@ONLY
		)
		CONFIGURE_FILE(
			${KLAYGE_ROOT_DIR}/cmake/Android/strings.xml.in
			${CMAKE_CURRENT_BINARY_DIR}/res/values/strings.xml
			@ONLY
		)
	ELSEIF(KLAYGE_PLATFORM_IOS)
		IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
			SET(PROJ_NAME "${EXE_NAME}_d")
		ELSE()
			SET(PROJ_NAME "${EXE_NAME}")
		ENDIF()
		SET(SHORT_NAME ${PROJ_NAME})

		STRING(TOLOWER ${SHORT_NAME} SHORT_NAME_LOWER_CASE)

		SET(MACOSX_BUNDLE_ICON_FILE "klayge_logo.png")
		SET(MACOSX_BUNDLE_INFO_STRING "${SHORT_NAME}")
		SET(MACOSX_BUNDLE_GUI_IDENTIFIER "org.klayge.${SHORT_NAME}")
		SET(MACOSX_BUNDLE_BUNDLE_NAME ${SHORT_NAME})
	ELSEIF(KLAYGE_PLATFORM_WINDOWS_DESKTOP)
		SET(RESOURCE_FILES ${RESOURCE_FILES}
			${KLAYGE_PROJECT_DIR}/Samples/media/Common/KlayGESample.rc
			${KLAYGE_PROJECT_DIR}/klayge_logo.ico
		)
	ENDIF()

	IF(KLAYGE_PLATFORM_WINDOWS_RUNTIME OR KLAYGE_PLATFORM_ANDROID OR KLAYGE_PLATFORM_IOS)
		FOREACH(item ${CONTENT_FILES})
			GET_FILENAME_COMPONENT(ITEM_EXT_NAME ${item} EXT)
			STRING(TOLOWER ${ITEM_EXT_NAME} ITEM_EXT_NAME)
			IF((ITEM_EXT_NAME STREQUAL ".kfx") OR (ITEM_EXT_NAME STREQUAL ".meshml.model_bin"))
				SET_SOURCE_FILES_PROPERTIES(${item} PROPERTIES GENERATED 1)
			ENDIF()
		ENDFOREACH()
	ENDIF()

	SOURCE_GROUP("Source Files" FILES ${SOURCE_FILES})
	SOURCE_GROUP("Header Files" FILES ${HEADER_FILES})
	SOURCE_GROUP("Resource Files" FILES ${RESOURCE_FILES})
	SOURCE_GROUP("Effect Files" FILES ${EFFECT_FILES})
	SOURCE_GROUP("Post Processors" FILES ${POST_PROCESSORS})
	SOURCE_GROUP("UI Files" FILES ${UI_FILES})

	INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/include)
	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/Core/Include)
	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/Samples/src/Common)
	IF(KLAYGE_PLATFORM_ANDROID)
		INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../External/android_native_app_glue)
	ENDIF()
	INCLUDE_DIRECTORIES(${EXTRA_INCLUDE_DIRS})
	LINK_DIRECTORIES(${Boost_LIBRARY_DIR})
	LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/lib/${KLAYGE_PLATFORM_NAME})
	IF(KLAYGE_PLATFORM_DARWIN OR KLAYGE_PLATFORM_LINUX)
		LINK_DIRECTORIES(${KLAYGE_BIN_DIR})
	ELSE()
		LINK_DIRECTORIES(${KLAYGE_OUTPUT_DIR})
	ENDIF()
	LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/Samples/lib/${KLAYGE_PLATFORM_NAME})
	IF(KLAYGE_PLATFORM_ANDROID OR KLAYGE_PLATFORM_IOS)
		LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../glloader/lib/${KLAYGE_PLATFORM_NAME})
		LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../kfont/lib/${KLAYGE_PLATFORM_NAME})
		LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../MeshMLLib/lib/${KLAYGE_PLATFORM_NAME})
		LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../External/7z/lib/${KLAYGE_PLATFORM_NAME})
	ENDIF()
	LINK_DIRECTORIES(${EXTRA_LINKED_DIRS})

	IF(KLAYGE_PLATFORM_ANDROID)
		ADD_LIBRARY(${EXE_NAME} SHARED ${SOURCE_FILES} ${KLAYGE_PROJECT_DIR}/../External/android_native_app_glue/android_native_app_glue.c)
	ELSE()
		ADD_EXECUTABLE(${EXE_NAME} ${SOURCE_FILES} ${HEADER_FILES} ${RESOURCE_FILES} ${EFFECT_FILES} ${POST_PROCESSORS} ${UI_FILES})
	ENDIF()
	IF(KLAYGE_PLATFORM_DARWIN)
		FIND_LIBRARY(APPKIT AppKit "/")
		SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES} ${APPKIT})
	ELSEIF(KLAYGE_PLATFORM_IOS)
		FIND_LIBRARY(FOUNDATION Foundation "/")
		FIND_LIBRARY(QUARTZCORE QuartzCore "/")
		FIND_LIBRARY(UIKIT UIKit "/")
		FIND_LIBRARY(OPENGLES OpenGLES "/")
		FIND_LIBRARY(COREFOUNDATION CoreFoundation "/")
		FIND_LIBRARY(GLKIT GLKit "/")
		SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES} ${FOUNDATION} ${QUARTZCORE} ${UIKIT} ${OPENGLES} ${COREFOUNDATION} ${GLKIT})
	ENDIF()

	IF(KLAYGE_PLATFORM_ANDROID)
		SET(SO_OUTPUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/libs/${KLAYGE_ARCH_NAME})
		SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES
			LIBRARY_OUTPUT_DIRECTORY ${SO_OUTPUT_DIR}
			LIBRARY_OUTPUT_DIRECTORY_DEBUG ${SO_OUTPUT_DIR}
			LIBRARY_OUTPUT_DIRECTORY_RELEASE ${SO_OUTPUT_DIR}
			LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${SO_OUTPUT_DIR}
			LIBRARY_OUTPUT_DIRECTORY_MINSIZEREL ${SO_OUTPUT_DIR}
		)
	ENDIF()

	SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES
		PROJECT_LABEL ${EXE_NAME}
		DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})
	IF(KLAYGE_PLATFORM_ANDROID)
		SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES OUTPUT_NAME ${EXE_NAME})
	ELSE()
		SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES OUTPUT_NAME ${EXE_NAME}${KLAYGE_OUTPUT_SUFFIX})
	ENDIF()

	IF(KLAYGE_PLATFORM_DARWIN)
		SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES
			RUNTIME_OUTPUT_DIRECTORY ${KLAYGE_BIN_DIR}
			RUNTIME_OUTPUT_DIRECTORY_DEBUG ${KLAYGE_BIN_DIR}
			RUNTIME_OUTPUT_DIRECTORY_RELEASE ${KLAYGE_BIN_DIR}
			RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${KLAYGE_BIN_DIR}
			RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${KLAYGE_BIN_DIR}
		)
	ENDIF()

	IF(MSVC)
		SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES})
	ELSE()
		IF(KLAYGE_PLATFORM_ANDROID)
			SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES}
				-Wl,--whole-archive
				debug KlayGE_RenderEngine_OpenGLES${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_RenderEngine_OpenGLES${KLAYGE_OUTPUT_SUFFIX}
				debug KlayGE_Scene_OCTree${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_Scene_OCTree${KLAYGE_OUTPUT_SUFFIX}
				debug KlayGE_InputEngine_MsgInput${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_InputEngine_MsgInput${KLAYGE_OUTPUT_SUFFIX}
				-Wl,--no-whole-archive
				debug SampleCommon${KLAYGE_OUTPUT_SUFFIX}_d optimized SampleCommon${KLAYGE_OUTPUT_SUFFIX}
				debug KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}
				debug KFL${KLAYGE_OUTPUT_SUFFIX}_d optimized KFL${KLAYGE_OUTPUT_SUFFIX}
				debug glloader_es${KLAYGE_OUTPUT_SUFFIX}_d optimized glloader_es${KLAYGE_OUTPUT_SUFFIX}
				debug kfont${KLAYGE_OUTPUT_SUFFIX}_d optimized kfont${KLAYGE_OUTPUT_SUFFIX}
				debug MeshMLLib${KLAYGE_OUTPUT_SUFFIX}_d optimized MeshMLLib${KLAYGE_OUTPUT_SUFFIX}
				${Boost_FILESYSTEM_LIBRARY} ${Boost_SYSTEM_LIBRARY}
				debug LZMA${KLAYGE_OUTPUT_SUFFIX}_d optimized LZMA${KLAYGE_OUTPUT_SUFFIX}
				log android)
		ELSEIF(KLAYGE_PLATFORM_IOS)
			SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES}
				debug KlayGE_RenderEngine_OpenGLES${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_RenderEngine_OpenGLES${KLAYGE_OUTPUT_SUFFIX}
				debug KlayGE_Scene_OCTree${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_Scene_OCTree${KLAYGE_OUTPUT_SUFFIX}
				debug KlayGE_InputEngine_MsgInput${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_InputEngine_MsgInput${KLAYGE_OUTPUT_SUFFIX}
				debug SampleCommon${KLAYGE_OUTPUT_SUFFIX}_d optimized SampleCommon${KLAYGE_OUTPUT_SUFFIX}
				debug KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}
				debug KFL${KLAYGE_OUTPUT_SUFFIX}_d optimized KFL${KLAYGE_OUTPUT_SUFFIX}
				debug glloader_es${KLAYGE_OUTPUT_SUFFIX}_d optimized glloader_es${KLAYGE_OUTPUT_SUFFIX}
				debug kfont${KLAYGE_OUTPUT_SUFFIX}_d optimized kfont${KLAYGE_OUTPUT_SUFFIX}
				debug MeshMLLib${KLAYGE_OUTPUT_SUFFIX}_d optimized MeshMLLib${KLAYGE_OUTPUT_SUFFIX}
				${Boost_FILESYSTEM_LIBRARY} ${Boost_SYSTEM_LIBRARY}
				debug LZMA${KLAYGE_OUTPUT_SUFFIX}_d optimized LZMA${KLAYGE_OUTPUT_SUFFIX})
		ELSE()
			SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES}
				debug SampleCommon${KLAYGE_OUTPUT_SUFFIX}_d optimized SampleCommon${KLAYGE_OUTPUT_SUFFIX}
				debug KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}
				debug KFL${KLAYGE_OUTPUT_SUFFIX}_d optimized KFL${KLAYGE_OUTPUT_SUFFIX}
				${Boost_SYSTEM_LIBRARY})
			IF(KLAYGE_PLATFORM_LINUX)
				SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES} dl pthread)
			ENDIF()
		ENDIF()
	ENDIF()
	ADD_DEPENDENCIES(${EXE_NAME} ${KLAYGE_CORELIB_NAME})
	ADD_DEPENDENCIES(${EXE_NAME} SampleCommon)

	TARGET_LINK_LIBRARIES(${EXE_NAME} ${EXTRA_LINKED_LIBRARIES})

	IF(KLAYGE_PLATFORM_WINDOWS_RUNTIME)
		IF(KLAYGE_PLATFORM_WINDOWS_STORE)
			IF(KLAYGE_ARCH_NAME MATCHES "arm")
				IF(KLAYGE_PLATFORM_WINDOWS_UWP)
					SET(JIT_PLATFORM_NAME "d3d_9_3")
				ELSE()
					SET(JIT_PLATFORM_NAME "d3d_9_1")
				ENDIF()
			ELSE()
				SET(JIT_PLATFORM_NAME "d3d_11_0")
			ENDIF()
		ELSE()
			IF(KLAYGE_ARCH_NAME MATCHES "arm")
				SET(JIT_PLATFORM_NAME "d3d_9_3")
			ELSE()
				SET(JIT_PLATFORM_NAME "d3d_11_0")
			ENDIF()
		ENDIF()
		FOREACH(item ${CONTENT_FILES})
			GET_FILENAME_COMPONENT(ITEM_EXT_NAME ${item} EXT)
			STRING(TOLOWER ${ITEM_EXT_NAME} ITEM_EXT_NAME)
			IF((CMAKE_MAJOR_VERSION STREQUAL "2") AND (CMAKE_MINOR_VERSION STREQUAL "8") AND (CMAKE_PATCH_VERSION STRLESS "12"))
				GET_FILENAME_COMPONENT(ITEM_DIRECTORY ${item} PATH)
			ELSE()
				GET_FILENAME_COMPONENT(ITEM_DIRECTORY ${item} DIRECTORY)
			ENDIF()
			GET_FILENAME_COMPONENT(ITEM_FILE_BASE_NAME ${item} NAME_WE)
			IF(ITEM_EXT_NAME STREQUAL ".kfx")
				ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_HOST_PLATFORM_NAME}/FXMLJIT ${JIT_PLATFORM_NAME} ${ITEM_DIRECTORY}/${ITEM_FILE_BASE_NAME}.fxml)
			ELSEIF(ITEM_EXT_NAME STREQUAL ".meshml.model_bin")
				ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_HOST_PLATFORM_NAME}/MeshMLJIT -I ${ITEM_DIRECTORY}/${ITEM_FILE_BASE_NAME}.meshml)
			ENDIF()
		ENDFOREACH()
	ELSEIF(KLAYGE_PLATFORM_ANDROID)
		FILE(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/assets)
		ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/drawable-xhdpi-icon.png ${CMAKE_CURRENT_BINARY_DIR}/res/drawable-xhdpi/icon.png)
		ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/drawable-hdpi-icon.png ${CMAKE_CURRENT_BINARY_DIR}/res/drawable-hdpi/icon.png)
		ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/drawable-mdpi-icon.png ${CMAKE_CURRENT_BINARY_DIR}/res/drawable-mdpi/icon.png)
		ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/drawable-ldpi-icon.png ${CMAKE_CURRENT_BINARY_DIR}/res/drawable-ldpi/icon.png)
		FOREACH(item ${CONTENT_FILES} ${POST_PROCESSORS} ${UI_FILES})
			GET_FILENAME_COMPONENT(ITEM_FILE_NAME ${item} NAME)
			GET_FILENAME_COMPONENT(ITEM_EXT_NAME ${item} EXT)
			STRING(TOLOWER ${ITEM_EXT_NAME} ITEM_EXT_NAME)
			IF((CMAKE_MAJOR_VERSION STREQUAL "2") AND (CMAKE_MINOR_VERSION STREQUAL "8") AND (CMAKE_PATCH_VERSION STRLESS "12"))
				GET_FILENAME_COMPONENT(ITEM_DIRECTORY ${item} PATH)
			ELSE()
				GET_FILENAME_COMPONENT(ITEM_DIRECTORY ${item} DIRECTORY)
			ENDIF()
			GET_FILENAME_COMPONENT(ITEM_FILE_BASE_NAME ${item} NAME_WE)
			IF(ITEM_EXT_NAME STREQUAL ".kfx")
				ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_HOST_PLATFORM_NAME}/FXMLJIT gles_2_0 ${ITEM_DIRECTORY}/${ITEM_FILE_BASE_NAME}.fxml ${CMAKE_CURRENT_BINARY_DIR}/assets)
			ELSEIF(ITEM_EXT_NAME STREQUAL ".meshml.model_bin")
				ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_HOST_PLATFORM_NAME}/MeshMLJIT -I ${ITEM_DIRECTORY}/${ITEM_FILE_BASE_NAME}.meshml -T ${CMAKE_CURRENT_BINARY_DIR}/assets)
			ELSE()
				ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${item} ${CMAKE_CURRENT_BINARY_DIR}/assets/${ITEM_FILE_NAME})
			ENDIF()
		ENDFOREACH()

		ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND android update project -p . -s -t android-${ANDROID_NATIVE_API_LEVEL} -n KlayGE_${PROJ_NAME})
		
		ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} POST_BUILD COMMAND ant debug)
		ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} POST_BUILD COMMAND adb install -r bin\\KlayGE_${PROJ_NAME}-debug.apk)
	ELSEIF(KLAYGE_PLATFORM_IOS)
		FILE(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/Resources)
		ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${KLAYGE_PROJECT_DIR}/klayge_logo.png ${CMAKE_CURRENT_BINARY_DIR}/Resources/klayge_logo.png)
		FOREACH(item ${CONTENT_FILES} ${POST_PROCESSORS} ${UI_FILES})
			GET_FILENAME_COMPONENT(ITEM_FILE_NAME ${item} NAME)
			GET_FILENAME_COMPONENT(ITEM_EXT_NAME ${item} EXT)
			STRING(TOLOWER ${ITEM_EXT_NAME} ITEM_EXT_NAME)
			IF((CMAKE_MAJOR_VERSION STREQUAL "2") AND (CMAKE_MINOR_VERSION STREQUAL "8") AND (CMAKE_PATCH_VERSION STRLESS "12"))
				GET_FILENAME_COMPONENT(ITEM_DIRECTORY ${item} PATH)
			ELSE()
				GET_FILENAME_COMPONENT(ITEM_DIRECTORY ${item} DIRECTORY)
			ENDIF()
			GET_FILENAME_COMPONENT(ITEM_FILE_BASE_NAME ${item} NAME_WE)
			IF(ITEM_EXT_NAME STREQUAL ".kfx")
				ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND cd ${KLAYGE_PROJECT_DIR}/bin/darwin_x64 && ./FXMLJIT ios ${ITEM_DIRECTORY}/${ITEM_FILE_BASE_NAME}.fxml ${CMAKE_CURRENT_BINARY_DIR}/Resources)
			ELSEIF(ITEM_EXT_NAME STREQUAL ".meshml.model_bin")
				ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND cd ${KLAYGE_PROJECT_DIR}/bin/darwin_x64 && ./MeshMLJIT -I ${ITEM_DIRECTORY}/${ITEM_FILE_BASE_NAME}.meshml -T ${CMAKE_CURRENT_BINARY_DIR}/Resources)
			ELSE()
				ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${item} ${CMAKE_CURRENT_BINARY_DIR}/Resources/${ITEM_FILE_NAME})
			ENDIF()
		ENDFOREACH()

		SET(APP_NAME \${TARGET_BUILD_DIR}/\${FULL_PRODUCT_NAME})
		ADD_CUSTOM_COMMAND(
		    TARGET ${EXE_NAME}
		    POST_BUILD
		    COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_BINARY_DIR}/Resources ${APP_NAME}
		)
	ENDIF()

	IF(NOT KLAYGE_PLATFORM_WINDOWS_RUNTIME AND NOT KLAYGE_PLATFORM_ANDROID AND NOT KLAYGE_PLATFORM_IOS)
		ADD_POST_BUILD(${EXE_NAME} "")

		INSTALL(TARGETS ${EXE_NAME}
			RUNTIME DESTINATION ${KLAYGE_BIN_DIR}
			LIBRARY DESTINATION ${KLAYGE_BIN_DIR}
			ARCHIVE DESTINATION ${KLAYGE_OUTPUT_DIR}
		)

		CREATE_PROJECT_USERFILE(KlayGE ${EXE_NAME})
	ENDIF()

	SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES FOLDER "Tutorials")
ENDMACRO(SETUP_TUTORIAL)

ADD_SUBDIRECTORY(DistanceMapping)
ADD_SUBDIRECTORY(Fractal)
ADD_SUBDIRECTORY(InputCaps)
ADD_SUBDIRECTORY(Refract)
ADD_SUBDIRECTORY(Tessellation)
ADD_SUBDIRECTORY(Tutor1)
ADD_SUBDIRECTORY(Tutor2)
ADD_SUBDIRECTORY(VertexDisplacement)
