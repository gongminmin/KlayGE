<?xml version='1.0'?>

<effect>
	<include name="ModelCamera.fxml"/>

	<parameter type="int3" name="hl_axis"/>

	<shader>
		<![CDATA[
void SimpleAxisVS(uint instance_id : SV_InstanceID,
				float4 pos : POSITION,
				out float4 oClr	: COLOR0,
				out float4 oPos : SV_Position)
{
	KlayGECameraInfo camera = CameraFromInstance(instance_id);
	float4x4 mvp = camera.mvp;

	oPos = mul(float4(pos.xyz, 1), mvp);
	if (pos.w < 0.5f)
	{
		oClr = float4(1, 0, 0, 1);
	}
	else if (pos.w < 1.5f)
	{
		oClr = float4(0, 1, 0, 1);
	}
	else
	{
		oClr = float4(0, 0, 1, 1);
	}
}

float4 SimpleAxisPS(float4 clr : COLOR0) : SV_Target
{
	return clr;
}
		]]>
	</shader>

	<technique name="SimpleAxisTech">
		<pass name="p0">
			<state name="vertex_shader" value="SimpleAxisVS()"/>
			<state name="pixel_shader" value="SimpleAxisPS()"/>
		</pass>
	</technique>

	<shader>
		<![CDATA[
void AxisVS(uint instance_id : SV_InstanceID,
				float4 pos : POSITION,
				float axis : TEXCOORD0,
				float3 normal : NORMAL,
				out float4 oClr	: COLOR0,
				out float4 oPos : SV_Position)
{
	KlayGECameraInfo camera = CameraFromInstance(instance_id);
	float4x4 mvp = camera.mvp;

	oPos = mul(pos, mvp);
	if (axis < 0.5f)
	{
		if (hl_axis.x)
		{
			oClr = float4(1, 1, 0, 1);
		}
		else
		{
			oClr = float4(1, 0, 0, 1);
		}
	}
	else if (axis < 1.5f)
	{
		if (hl_axis.y)
		{
			oClr = float4(1, 1, 0, 1);
		}
		else
		{
			oClr = float4(0, 1, 0, 1);
		}
	}
	else
	{
		if (hl_axis.z)
		{
			oClr = float4(1, 1, 0, 1);
		}
		else
		{
			oClr = float4(0, 0, 1, 1);
		}
	}

	float3 normal_ws = mul(normal, (float3x3)model);
	oClr.xyz *= 0.5f + 0.5f * dot(float3(0, 1, 0), normal_ws);
}

float4 AxisPS(float4 clr : COLOR0) : SV_Target
{
	return clr;
}
		]]>
	</shader>

	<technique name="AxisTech">
		<pass name="p0">
			<state name="vertex_shader" value="AxisVS()"/>
			<state name="pixel_shader" value="AxisPS()"/>
		</pass>
	</technique>

	<shader>
		<![CDATA[
void GridVS(uint instance_id : SV_InstanceID,
				float4 pos : POSITION,
				out float2 oMark : TEXCOORD0,
				out float4 oPos : SV_Position)
{
	KlayGECameraInfo camera = CameraFromInstance(instance_id);
	float4x4 mvp = camera.mvp;

	oPos = mul(pos, mvp);

	if (abs(pos.x) < 1e-6f)
	{
		oMark.x = pos.z * 0.2f;
		oMark.y = 2.5f;
	}
	else if (abs(pos.z) < 1e-6f)
	{
		oMark.x = pos.x * 0.2f;
		oMark.y = 1.5f;
	}
	else
	{
		oMark.x = 0.5f;
		oMark.y = 0.5f;
	}
}

float4 GridPS(float2 mark : TEXCOORD0) : SV_Target
{
	float4 clr;
	if (mark.y > 2)
	{
		clr = float4(0, abs(mark.x), -mark.x, 1);
	}
	else if (mark.y > 1)
	{
		clr = float4(abs(mark.x), 0, -mark.x, 1);
	}
	else
	{
		clr = float4(0.5f, 0.5f, 0.5f, 1);
	}
	return saturate(clr);
}
		]]>
	</shader>


	<technique name="GridTech">
		<pass name="p0">
			<state name="vertex_shader" value="GridVS()"/>
			<state name="pixel_shader" value="GridPS()"/>
		</pass>
	</technique>
</effect>
